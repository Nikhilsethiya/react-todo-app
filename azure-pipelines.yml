
trigger:
  branches:
    include:
      - main
pr:
  branches:
    include:
      - main
      
resources:
- repo: self

variables:
    # Reference the variable group
  # Inline variables
    dockerRegistryServiceConnection: 'd3ab8fe1-2bf6-4612-b2a1-a24bb4837ebd'
    imageRepository: 'todoappdocker'
    containerRegistry: 'nikhilcontainer.azurecr.io'
    dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
    tag: '$(Build.BuildId)'
    vmImageName: 'my-agent'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
     name: $(vmImageName)
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Free Trial(6186ef48-ea89-4257-8b72-366360b071df)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript' 
        inlineScript: 'az acr login --name=$(containerRegistry)'
 
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

# - stage: Test
#   displayName: Test stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#     - job: test
#       pool:
#         name: $(vmImageName)
#       steps:
#       - task: SonarQubePrepare@7
#         inputs:
#           SonarQube: 'sonar-qube'
#           scannerMode: 'cli'
#           configMode: 'manual'
#           cliProjectKey: 'todo-app'
#           cliProjectName: 'todo-app'
#           cliSources: '.'
#       - task: SonarQubeAnalyze@7
#         displayName: 'Run SonarQube Analysis'
      
- stage: Deploy
  displayName: Deploy Stage
  # dependsOn: Test
  # condition: succeeded()
  variables:
  - group: acr-credentials
  jobs:
  - deployment: Deploy
    environment: Production
    pool:
      name: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Free Trial(6186ef48-ea89-4257-8b72-366360b071df)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az container create \
                --name nikhil-app \
                --resource-group app-rgGroup \
                --image $(containerRegistry)/$(imageRepository):$(tag) \
                --os-type Linux \
                --cpu 1 \
                --memory 1.5 \
                --registry-login-server $(containerRegistry) \
                --registry-username $(username) \
                --registry-password $(password) \
                --dns-name-label nikhil-app
